{"version":3,"file":"game.js","mappings":"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","sources":["webpack://bignecessaryapplicationsuite/./src/functions.js","webpack://bignecessaryapplicationsuite/./src/game/game.js","webpack://bignecessaryapplicationsuite/./src/game/socket.js","webpack://bignecessaryapplicationsuite/./src/scenes/join.js","webpack://bignecessaryapplicationsuite/./src/scenes/howtoplay.js","webpack://bignecessaryapplicationsuite/./src/scenes/died.js","webpack://bignecessaryapplicationsuite/./src/scenes/best.js","webpack://bignecessaryapplicationsuite/./src/scenes/disconnect.js","webpack://bignecessaryapplicationsuite/./src/main.js"],"sourcesContent":["const size = 3000;\nconst playersize = 50;\nconst coinsize = 37.5;\nconst ratio = size / 60;\nconst treesize = 300;\n\nfunction random(number1, number2){\n  return Math.round(Math.random() * (number2 - number1)) + number1;\n}\n\nfunction checkMovement(direction, x, y){\n  if(direction == \"left\"){\n    if(x <= 0) return false;\n  } if(direction == \"right\"){\n    if(x + playersize >= size) return false;\n  } if(direction == \"up\"){\n    if(y <= 0) return false;\n  } if(direction == \"down\"){\n    if(y + playersize >= size) return false;\n  } if(direction == \"none\"){\n    return false;\n  }\n  return true;\n}\n\nexport { size, playersize, coinsize, ratio, random, checkMovement, treesize }","import { size, playersize, coinsize, ratio, random, checkMovement, treesize } from \"../functions.js\";\nimport socketfunc from \"./socket.js\";\nconst speed = 300;\n\nclass gamescene extends Phaser.Scene {\n  constructor(){\n    super();\n  }\n  \n  preload() {\n    this.load.image(\"player\", \"/img/player.png\");\n    this.load.image(\"coin\", \"/img/gameObjects/coin.png\");\n    this.load.image(\"grass\", \"/img/gameObjects/tile.png\");\n    this.load.image(\"bullet\", \"/img/gameObjects/bullet.png\");\n    this.load.image(\"pistol\", \"/img/guns/pistol.png\");\n    this.load.image(\"obstacle\", \"/img/gameObjects/obstacle.png\");\n    this.load.image(\"obstacle2\", \"/img/gameObjects/obstacle2.png\");\n    this.load.image(\"tree\", \"/img/gameObjects/tree.png\");\n    this.loadingtext = this.add.text(window.innerWidth / 2, window.innerHeight / 2, \"Loading...\", { fontFamily: \"Arial\", fontSize: 50 }).setOrigin(0.5);\n  }\n\n  create() {\n    this.loaded = false;\n    this.socket = io();\n    this.otherplayers = this.physics.add.group();\n    this.otherguns = this.physics.add.group();\n    this.coins = this.physics.add.group();\n    this.trees = this.physics.add.group();\n    this.socket.emit(\"join\", localStorage.getItem(\"name\"));\n    socketfunc(this);\n  }\n\n  main(){\n    this.w = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W)\n    this.a = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A)\n    this.s = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S)\n    this.d = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D)\n\n    for(let i = size / (ratio * 2); i < size; i += size / ratio){\n      for(let j = size / (ratio * 2); j < size; j += size / ratio){\n        let grass = this.physics.add.image(i, j, \"grass\").setDepth(0);\n      }\n    }\n    \n    this.obstacle1 = this.physics.add.staticSprite(1500, 750, \"obstacle\").setDepth(0);\n    this.obstacle2 = this.physics.add.staticSprite(1500, 2250, \"obstacle\").setDepth(0);\n    this.obstacle3 = this.physics.add.staticSprite(750, 1500, \"obstacle2\").setDepth(0);\n    this.obstacle4 = this.physics.add.staticSprite(2250, 1500, \"obstacle2\").setDepth(0);\n\n  \n    this.gun = this.physics.add.sprite(this.player.x, this.player.y, \"pistol\").setDepth(15);\n\n    this.gun.angle2 = 0;\n\n    this.bullets = this.physics.add.group();\n\n    this.health = 100;\n    this.healthtext = this.add.text(100, 50, \"Health\", { fontFamily: \"Arial\", fontSize: 30 }).setDepth(10);\n    this.healthtext.scrollFactorX = 0;\n    this.healthtext.scrollFactorY = 0;\n\n    this.healthbar = this.add.rectangle(200, 100, 200, 20, 0x0ffffff).setDepth(10);\n    this.healthbar.scrollFactorX = 0;\n    this.healthbar.scrollFactorY = 0;\n\n    this.healthbarinside = this.add.rectangle(200, 100, 200, 20, 0x060f20c).setDepth(10);\n    this.healthbarinside.scrollFactorX = 0;\n    this.healthbarinside.scrollFactorY = 0;\n\n    this.score = 0;\n\n    this.scoretext = this.add.text(window.innerWidth - 200, 100, \"Score: \" + this.score, { fontFamily: \"Arial\", fontSize: 30 }).setDepth(10);\n    this.scoretext.scrollFactorX = 0;\n    this.scoretext.scrollFactorY = 0;\n\n    this.gold = 0;\n    this.goldtext = this.add.text(window.innerWidth - 200, 150, \"Gold: \" + this.gold, { fontFamily: \"Arial\", fontSize: 30 }).setDepth(10);\n    this.goldtext.scrollFactorX = 0;\n    this.goldtext.scrollFactorY = 0;\n\n    this.addWeaponActions();\n\n    var gameobject = this;\n    this.healFunction = setInterval(function(){\n      if(gameobject.health < 100){\n        gameobject.health += 1;\n        gameobject.updateHealthBar();\n      }\n    }, 1000);\n\n    this.physics.add.collider(this.player, this.coins, (player, coin) => { // player collects coin\n      this.collect(player, coin);\n    });\n\n    this.physics.add.collider(this.bullets, this.obstacle1, (obstacle, bullet) => {\n      bullet.destroy();\n    });\n    this.physics.add.collider(this.player, this.obstacle1, () => {\n      this.player.setVelocityX(0);\n      this.player.setVelocityY(0);\n    });\n\n    this.physics.add.collider(this.bullets, this.obstacle2, (obstacle, bullet) => {\n      bullet.destroy();\n    });\n    this.physics.add.collider(this.player, this.obstacle2, () => {\n      this.player.setVelocityX(0);\n      this.player.setVelocityY(0);\n    });\n\n    this.physics.add.collider(this.bullets, this.obstacle3, (obstacle, bullet) => {\n      bullet.destroy();\n    });\n    this.physics.add.collider(this.player, this.obstacle3, () => {\n      this.player.setVelocityX(0);\n      this.player.setVelocityY(0);\n    });\n\n    this.physics.add.collider(this.bullets, this.obstacle4, (obstacle, bullet) => {\n      bullet.destroy();\n    });\n    this.physics.add.collider(this.player, this.obstacle4, () => {\n      this.player.setVelocityX(0);\n      this.player.setVelocityY(0);\n    });\n    \n    // this.physics.add.collider(this.bullets, this.demons, (bullet, demon) => {\n    //   bullet.destroy();\n    //   demon.destroy();\n    //   this.score += 1;\n    //   this.scoretext.setText(\"Score: \" + this.score);\n    //   this.demontext.setText(\"Demons: \" + this.demons.children.entries.length);\n    //   if(this.score > localStorage.getItem(\"bestscore\")){\n    //     localStorage.setItem(\"bestscore\", this.score);\n    //   }\n    // });\n  }\n\n  collect(player, coin){\n    this.socket.emit(\"collect gold\", coin.id);\n    console.log(coin.id)\n    this.gold += 1;\n    this.goldtext.setText(\"Gold: \" + this.gold);\n    coin.destroy();\n    if(this.gold > localStorage.getItem(\"bestgold\")){\n      localStorage.setItem(\"bestgold\", this.gold);\n    }\n    for(let i = 0; i < random(0, 2); i++){\n      this.coins.create(random(coinsize / 2, size - coinsize / 2), random(coinsize / 2, size - coinsize / 2), \"coin\").setScale(0.75, 0.75);\n    }\n  }\n\n  updateHealthBar(){\n    if(this.health < 0) this.health = 0;\n    this.healthbarinside.width = 200 * this.health / 100;\n  }\n\n\n  addWeaponActions(){\n    this.useweapon = true;\n    window.addEventListener(\"mousedown\", e => {\n      if(!this.useweapon) return;\n      var angle = Math.atan2(e.clientY - (window.innerHeight / 2), e.clientX - (window.innerWidth / 2));\n      let bullet = this.bullets.create(this.player.x + Math.cos(angle) * (playersize / 2 + 23), this.player.y + Math.sin(angle) * (playersize / 2 + 23), \"bullet\").setScale(0.5, 2).setDepth(13);\n      bullet.angle = ((angle * 180 / Math.PI) + 360) % 360;\n      bullet.setVelocityX(Math.cos(angle) * 1500);\n      bullet.setVelocityY(Math.sin(angle) * 1500);\n      this.gun.angle = ((angle * 180 / Math.PI) + 360) % 360;\n      this.gun.angle2 = angle;\n      this.useweapon = false;\n    });\n    \n    window.addEventListener(\"mousemove\", e => {\n      var angle = Math.atan2(e.clientY - (window.innerHeight / 2), e.clientX - (window.innerWidth / 2));\n      this.gun.angle = ((angle * 180 / Math.PI) + 360) % 360;\n      this.gun.angle2 = angle;\n    });\n\n    setInterval(() => {\n      if(!this.useweapon){\n        this.useweapon = true;\n      }\n    }, 500);\n  }\n\n  update() {\n    if(!this.loaded) return;\n    let cursors = this.input.keyboard.createCursorKeys();\n    \n    this.player.setVelocityX(0);\n    this.player.setVelocityY(0);\n    if(cursors.left.isDown || this.a.isDown){\n      if(checkMovement(\"left\", this.player.body.position.x, this.player.body.position.y)) this.player.setVelocityX(-speed);\n    } if(cursors.right.isDown || this.d.isDown){\n      if(checkMovement(\"right\", this.player.body.position.x, this.player.body.position.y)) this.player.setVelocityX(speed);\n    } if(cursors.up.isDown || this.w.isDown){\n      if(checkMovement(\"up\", this.player.body.position.x, this.player.body.position.y)) this.player.setVelocityY(-speed);\n    } if(cursors.down.isDown || this.s.isDown){\n      if(checkMovement(\"down\", this.player.body.position.x, this.player.body.position.y)) this.player.setVelocityY(speed);\n    }\n    \n    this.gun.x = this.player.body.position.x + playersize / 2 + Math.cos(this.gun.angle2) * (playersize / 2 + 28);\n    this.gun.y = this.player.body.position.y + playersize / 2 + Math.sin(this.gun.angle2) * (playersize / 2 + 28);\n\n    this.player.angle = this.gun.angle;\n\n    if(this.player.x != this.data.x || this.player.y != this.data.y || this.player.angle != this.data.angle){\n      this.data.x = this.player.x;\n      this.data.y = this.player.y;\n      this.data.angle = this.gun.angle;\n      this.data.angle2 = this.gun.angle2;\n      this.data.gunx = this.gun.x;\n      this.data.guny = this.gun.y\n      this.socket.emit(\"player move\", this.data);\n    }\n  }\n}\n\n\nexport default gamescene;\n\n// https://www.html5gamedevs.com/topic/7273-best-way-to-fix-weapon-to-player/","import { size, playersize, coinsize, ratio, random, checkMovement, treesize } from \"../functions.js\";\n\nfunction socketfunc(game){\n  game.socket.on(\"gamedata\", data => { // when game data arrives\n    game.loaded = true;\n    game.loadingtext.destroy();\n    game.player = game.physics.add.sprite(data.players[game.socket.id].x, data.players[game.socket.id].y, \"player\").setScale(0.5, 0.5).setDepth(1);\n    game.cameras.main.startFollow(game.player);\n    game.data = {\n      x: data.players[game.socket.id].x,\n      y: data.players[game.socket.id].y,\n      angle: 0,\n      angle2:0\n    };\n\n    for(let i of data.coins){\n      let coin = game.coins.create(i.x, i.y, \"coin\").setScale(0.75, 0.75).setDepth(1);\n      coin.id = i.id;\n    }\n\n    for(let i of data.trees){\n      let tree = game.trees.create(i.x, i.y, \"tree\").setScale(i.size / treesize).setDepth(10);\n      tree.id = i.id;\n    }\n    \n    for(let oplayer of Object.keys(data.players)){\n      if(oplayer != game.socket.id){\n        let otherplayer = game.otherplayers.create(data.players[oplayer].x, data.players[oplayer].y, \"player\").setScale(0.5, 0.5).setDepth(1);\n        otherplayer.id = oplayer;\n        let gun = game.otherguns.create(data.players[oplayer].x + Math.cos(data.players[oplayer].angle2) * (playersize / 2 + 28), data.players[oplayer].y + Math.sin(data.players[oplayer].angle2) * (playersize / 2 + 28), \"pistol\").setDepth(15);\n        gun.angle = data.players[oplayer].angle;\n        gun.angle2 = data.players[oplayer].angle2;\n        gun.id = oplayer;\n      }\n    }\n    game.main();\n      \n  });\n\n  game.socket.on(\"new player\", (data, id) => { // when new player joins\n    let otherplayer = game.otherplayers.create(data.x, data.y, \"player\").setScale(0.5, 0.5).setDepth(1);\n    let gun = game.otherguns.create(data.x + Math.cos(0) * (playersize / 2 + 28), data.y + Math.sin(0) * (playersize / 2 + 28), \"pistol\").setDepth(15);\n    gun.angle = 0;\n    gun.angle2 = 0;\n    otherplayer.id = id;\n    gun.id = id;\n  });\n\n  game.socket.on(\"other player move\", (id, data) => { // when other player moves\n    game.otherplayers.getChildren().forEach(oplayer => {\n      if(oplayer.id == id){\n        oplayer.setPosition(data.x, data.y);\n        oplayer.angle = data.angle;\n        game.otherguns.getChildren().forEach(gun => {\n          if(gun.id == id){\n            gun.angle = data.angle;\n            gun.angle2 = data.angle2;\n            gun.setPosition(data.gunx, data.guny);\n          }\n        });\n      }\n    });\n  });\n\n  game.socket.on(\"collected gold\", id => {\n    for(let coin of game.coins.children.entries){\n      if(coin.id == id){\n        coin.destroy();\n        console.log(\"deleted coin\");\n      }\n    }\n  });\n\n  game.socket.on(\"left\", id => {\n    for(let player of game.otherplayers.children.entries){\n      if(player.id == id){\n        player.destroy();\n      }\n    }\n\n    for(let gun of game.otherguns.children.entries){\n      if(gun.id == id){\n        gun.destroy();\n      }\n    }\n  });\n\n  game.socket.on(\"leave\", () => {\n    game.scene.start(\"disconnect_scene\");\n  });\n}\n\nexport default socketfunc;","class joinscene extends Phaser.Scene {\n  constructor(){\n    super();\n  }\n  \n  preload(){\n    \n  }\n  \n  create(){\n    if(!localStorage.getItem(\"bestscore\")){\n      localStorage.setItem(\"bestscore\", 0);\n    }\n    if(!localStorage.getItem(\"bestgold\")){\n      localStorage.setItem(\"bestgold\", 0);\n    }\n    this.add.text(window.innerWidth / 2, 100, \"Game\", { fontFamily: \"Arial\", fontSize:100 }).setOrigin(0.5);\n\n    this.button = this.add.rectangle(0, 0, 0, 0, 0x0f0);\n    this.text = this.add.text(window.innerWidth / 2, window.innerHeight / 2.5, 'Play', { fill: '#ffffff', fontFamily: \"Arial\", fontSize:50 }).setOrigin(0.5);\n    this.button.width = this.text.width + 15;\n    this.button.height = this.text.height + 15;\n    this.button.x = this.text.x - (this.text.width / 2) - 5;\n    this.button.y = this.text.y - (this.text.height / 2) - 5;\n    this.button.setInteractive().on('pointerdown', () => {\n      this.scene.start(\"gamescene\");\n    });\n\n    this.button2 = this.add.rectangle(0, 0, 0, 0, 0x0f0);\n    this.text2 = this.add.text(window.innerWidth / 2, window.innerHeight / 1.8, 'How To Play', { fill: '#ffffff', fontFamily: \"Arial\", fontSize:50 }).setOrigin(0.5);\n    this.button2.width = this.text2.width + 15;\n    this.button2.height = this.text2.height + 15;\n    this.button2.x = this.text2.x - (this.text2.width / 2) - 5;\n    this.button2.y = this.text2.y - (this.text2.height / 2) - 5;\n    this.button2.setInteractive().on('pointerdown', () => {\n      this.scene.start(\"howtoplay\");\n    });\n\n    this.button3 = this.add.rectangle(0, 0, 0, 0, 0x0f0);\n    this.text3 = this.add.text(window.innerWidth / 2, window.innerHeight / 1.4, 'Your Best Scores', { fill: '#ffffff', fontFamily: \"Arial\", fontSize:50 }).setOrigin(0.5);\n    this.button3.width = this.text3.width + 15;\n    this.button3.height = this.text3.height + 15;\n    this.button3.x = this.text3.x - (this.text3.width / 2) - 5;\n    this.button3.y = this.text3.y - (this.text3.height / 2) - 5;\n    this.button3.setInteractive().on('pointerdown', () => {\n      this.scene.start(\"bestscores\");\n    });\n  }\n  \n  update(){\n\n  }\n}\n\nexport default joinscene;","class howtoplay extends Phaser.Scene {\n  constructor(){\n    super();\n  }\n\n  preload(){\n    \n  }\n  \n  create(){\n    this.add.text(window.innerWidth / 2, 100, \"How To Play\", { fontFamily: \"Arial\", fontSize:75 }).setOrigin(0.5 );\n    this.button = this.add.rectangle(0, 0, 0, 0, 0x0f0);\n    this.text = this.add.text(window.innerWidth / 2, window.innerHeight / 1.5, 'Back', { fill: '#ffffff', fontFamily: \"Arial\", fontSize:50 }).setOrigin(0.5);\n    this.button.width = this.text.width + 10;\n    this.button.height = this.text.height + 10;\n    this.button.x = this.text.x - (this.text.width / 2) - 5;\n    this.button.y = this.text.y - (this.text.height / 2) - 5;\n    this.button.setInteractive().on('pointerdown', () => {\n      this.scene.start(\"joinscene\");\n    });\n  }\n  \n  update(){\n\n  }\n}\n\nexport default howtoplay;","class diedscene extends Phaser.Scene {\n  constructor(){\n    super();\n  }\n  \n  preload(){\n     \n  }\n  \n  create(){\n    this.add.text(window.innerWidth / 2, 100, \"You Died\", { fontFamily: \"Arial\", fontSize:100 }).setOrigin(0.5);\n\n    this.button = this.add.rectangle(0, 0, 0, 0, 0x0f0);\n    this.text = this.add.text(window.innerWidth / 2, window.innerHeight / 2, 'OK', { fill: '#ffffff', fontFamily: \"Arial\", fontSize:50 }).setOrigin(0.5);\n    this.button.width = this.text.width + 15;\n    this.button.height = this.text.height + 15;\n    this.button.x = this.text.x - (this.text.width / 2) - 5;\n    this.button.y = this.text.y - (this.text.height / 2) - 5;\n    this.button.setInteractive().on('pointerdown', () => {\n      this.scene.start(\"joinscene\");\n    });\n  }\n  \n  update(){\n\n  }\n}\n\nexport default diedscene;","class bestscores extends Phaser.Scene {\n  constructor(){\n    super();\n  }\n\n  preload(){\n    \n  }\n  \n  create(){\n    this.add.text(window.innerWidth / 2, 100, \"Your Best\", { fontFamily: \"Arial\", fontSize:100 }).setOrigin(0.5);\n    this.add.text(window.innerWidth / 2, 300, \"Score: \" + localStorage.getItem(\"bestscore\"), { fontFamily: \"Arial\", fontSize:75 }).setOrigin(0.5);\n    this.add.text(window.innerWidth / 2, 400, \"Gold: \" + localStorage.getItem(\"bestgold\"), { fontFamily: \"Arial\", fontSize:75 }).setOrigin(0.5);\n\n    this.button = this.add.rectangle(0, 0, 0, 0, 0x0f0);\n    this.text = this.add.text(window.innerWidth / 2, window.innerHeight / 1.25, 'Back', { fill: '#ffffff', fontFamily: \"Arial\", fontSize:50 }).setOrigin(0.5);\n    this.button.width = this.text.width + 15;\n    this.button.height = this.text.height + 15;\n    this.button.x = this.text.x - (this.text.width / 2) - 5;\n    this.button.y = this.text.y - (this.text.height / 2) - 5;\n    this.button.setInteractive().on('pointerdown', () => {\n      this.scene.start(\"joinscene\");\n    });\n  }\n  update(){\n\n  }\n}\n\nexport default bestscores;","class disconnect_scene extends Phaser.Scene {\n  constructor(){\n    super();\n  }\n  \n  preload(){\n    \n  }\n  \n  create(){\n    this.add.text(window.innerWidth / 2, 100, \"You got disconnected\", { fontFamily: \"Arial\", fontSize:50 }).setOrigin(0.5);\n\n    this.button = this.add.rectangle(0, 0, 0, 0, 0x0f0);\n    this.text = this.add.text(window.innerWidth / 2, window.innerHeight / 2, 'OK', { fill: '#ffffff', fontFamily: \"Arial\", fontSize:50 }).setOrigin(0.5);\n    this.button.width = this.text.width + 15;\n    this.button.height = this.text.height + 15;\n    this.button.x = this.text.x - (this.text.width / 2) - 5;\n    this.button.y = this.text.y - (this.text.height / 2) - 5;\n    this.button.setInteractive().on('pointerdown', () => {\n      location.reload();\n    });\n  }\n  \n  update(){\n\n  }\n}\n\nexport default disconnect_scene;","import gamescene from \"./game/game.js\";\nimport joinscene from \"./scenes/join.js\";\nimport howtoplay from \"./scenes/howtoplay.js\";\nimport diedscene from \"./scenes/died.js\";\nimport bestscores from \"./scenes/best.js\";\nimport disconnect_scene from \"./scenes/disconnect.js\";\n\nconst config = {\n  type: Phaser.AUTO,\n  width: window.innerWidth,\n  height: window.innerHeight,\n  backgroundColor: \"#000000\",\n  physics: {\n    default: \"arcade\",\n    arcade: {\n      gravity: {\n        y: 0\n      },\n      debug: false\n    }\n  }\n};\n\nfunction startGame(){\n  let name = document.getElementById(\"input\").value;\n  if(!name.replace(\" \", \"\")){\n    document.querySelector(\"p\").style.display = \"block\";\n    return;\n  }\n  localStorage.setItem(\"name\", name);\n  \n  const game = new Phaser.Game(config);\n  \n  game.scene.add(\"gamescene\", gamescene);\n  game.scene.add(\"joinscene\", joinscene);\n  game.scene.add(\"howtoplay\", howtoplay);\n  game.scene.add(\"diedscene\", diedscene);\n  game.scene.add(\"bestscores\", bestscores);\n  game.scene.add(\"disconnect_scene\", disconnect_scene);\n  game.scene.start(\"gamescene\");\n  document.querySelector(\"canvas\").style.cursor = \"crosshair\";\n  \n  window.addEventListener(\"resize\", () => {\n    game.scale.resize(window.innerWidth, window.innerHeight);\n  });\n  \n  document.querySelector(\"main\").style.display = \"none\";\n}\n\nif(localStorage.getItem(\"name\")){\n  document.getElementById(\"input\").value = localStorage.getItem(\"name\");\n}\ndocument.getElementById(\"playbtn\").addEventListener(\"click\", startGame);"],"names":["size","random","number1","number2","Math","round","checkMovement","direction","x","y","gamescene","Phaser","Scene","constructor","super","preload","this","load","image","loadingtext","add","text","window","innerWidth","innerHeight","fontFamily","fontSize","setOrigin","create","game","loaded","socket","io","otherplayers","physics","group","otherguns","coins","trees","emit","localStorage","getItem","on","data","destroy","player","sprite","players","id","setScale","setDepth","cameras","main","startFollow","angle","angle2","i","oplayer","Object","keys","gun","cos","sin","otherplayer","getChildren","forEach","setPosition","gunx","guny","coin","children","entries","console","log","scene","start","w","input","keyboard","addKey","Input","Keyboard","KeyCodes","W","a","A","s","S","d","D","j","obstacle1","staticSprite","obstacle2","obstacle3","obstacle4","bullets","health","healthtext","scrollFactorX","scrollFactorY","healthbar","rectangle","healthbarinside","score","scoretext","gold","goldtext","addWeaponActions","gameobject","healFunction","setInterval","updateHealthBar","collider","collect","obstacle","bullet","setVelocityX","setVelocityY","setText","setItem","coinsize","width","useweapon","addEventListener","e","atan2","clientY","clientX","PI","update","cursors","createCursorKeys","left","isDown","body","position","right","up","down","playersize","joinscene","button","fill","height","setInteractive","button2","text2","button3","text3","howtoplay","diedscene","bestscores","disconnect_scene","location","reload","config","type","AUTO","backgroundColor","default","arcade","gravity","debug","document","getElementById","value","name","replace","querySelector","style","display","Game","join","died","best","disconnect","cursor","scale","resize"],"sourceRoot":""}